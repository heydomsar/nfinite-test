{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\nimport SuccessRow from '../components/SuccessRow';\nimport ErrorRow from '../components/ErrorRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  const processImage = src => {\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n      request.open('GET', src);\n      request.responseType = 'blob';\n\n      request.onload = function () {\n        if (request.status === 200) {\n          console.log('success');\n          const img = new Image();\n          img.src = src;\n          resolve({\n            width: img.width,\n            height: img.height\n          });\n        } else {\n          console.log('fail');\n          resolve({});\n        }\n      };\n\n      request.send();\n    });\n  };\n\n  const createRow = async row => {\n    const newImg = await processImage(row.url);\n    console.log('newImg', newImg, newImg.width);\n\n    if (!newImg.width || !newImg.height) {\n      return /*#__PURE__*/_jsxDEV(ErrorRow, {\n        row: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SuccessRow, {\n      row: row,\n      width: newImg.width,\n      height: newImg.height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => createRow(row))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableContainer","Paper","SuccessRow","ErrorRow","PageTwo","data","processImage","src","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onload","status","console","log","img","Image","width","height","send","createRow","row","newImg","url","minWidth","maxWidth","margin","map"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG;AAAT,CAAD,KAAmB;AACjC,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBN,GAApB;AACAI,MAAAA,OAAO,CAACG,YAAR,GAAuB,MAAvB;;AAEAH,MAAAA,OAAO,CAACI,MAAR,GAAiB,YAAY;AAC3B,YAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,gBAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,UAAAA,GAAG,CAACZ,GAAJ,GAAUA,GAAV;AACAE,UAAAA,OAAO,CAAC;AAAEY,YAAAA,KAAK,EAAEF,GAAG,CAACE,KAAb;AAAoBC,YAAAA,MAAM,EAAEH,GAAG,CAACG;AAAhC,WAAD,CAAP;AACD,SALD,MAKO;AACLL,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,UAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,OAVD;;AAYAE,MAAAA,OAAO,CAACY,IAAR;AACD,KAlBM,CAAP;AAmBD,GApBD;;AAsBA,QAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC/B,UAAMC,MAAM,GAAG,MAAMpB,YAAY,CAACmB,GAAG,CAACE,GAAL,CAAjC;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,MAAtB,EAA8BA,MAAM,CAACL,KAArC;;AAEA,QAAI,CAACK,MAAM,CAACL,KAAR,IAAiB,CAACK,MAAM,CAACJ,MAA7B,EAAqC;AACnC,0BAAO,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEG;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBAAO,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,GAAjB;AAAsB,MAAA,KAAK,EAAEC,MAAM,CAACL,KAApC;AAA2C,MAAA,MAAM,EAAEK,MAAM,CAACJ;AAA1D;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GATD;;AAWA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAErB,KAA3B;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,EAAE,EAAE;AAAE2B,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,QAAQ,EAAE,GAA3B;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADN;AAEE,oBAAW,cAFb;AAAA,6BAIE,QAAC,SAAD;AAAA,kBAAYzB,IAAI,CAAC0B,GAAL,CAAUN,GAAD,IAASD,SAAS,CAACC,GAAD,CAA3B;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5CD;;KAAMrB,O;AA8CN,eAAeA,OAAf","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\nimport SuccessRow from '../components/SuccessRow';\nimport ErrorRow from '../components/ErrorRow';\n\nconst PageTwo = ({ data = [] }) => {\n  const processImage = (src) => {\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n      request.open('GET', src);\n      request.responseType = 'blob';\n\n      request.onload = function () {\n        if (request.status === 200) {\n          console.log('success');\n          const img = new Image();\n          img.src = src;\n          resolve({ width: img.width, height: img.height });\n        } else {\n          console.log('fail');\n          resolve({});\n        }\n      };\n\n      request.send();\n    });\n  };\n\n  const createRow = async (row) => {\n    const newImg = await processImage(row.url);\n    console.log('newImg', newImg, newImg.width);\n\n    if (!newImg.width || !newImg.height) {\n      return <ErrorRow row={row} />;\n    }\n\n    return <SuccessRow row={row} width={newImg.width} height={newImg.height} />;\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>{data.map((row) => createRow(row))}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}