{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => {\n          const processImage = src => {\n            return new Promise((resolve, reject) => {\n              const img = new Image();\n\n              img.onload = () => resolve(img); // img.onerror = reject;\n              //  {\n              //     row.imgWidth = this.width;\n              //     row.imgHeight = this.height;\n              // };\n\n\n              img.src = src;\n            });\n          };\n\n          return processImage(row.url).then(imgObj => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  color: \"success\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [imgObj.width, \" x \", imgObj.height]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.url,\n                  alt: row.name,\n                  width: \"200px\" // loading=\"lazy\"\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          }); //   .catch(() => {\n          //     return (\n          //       <TableRow\n          //         key={row.id}\n          //         sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n          //       >\n          //         <TableCell>\n          //           <Error color=\"disabled\" fontSize=\"large\" />\n          //         </TableCell>\n          //         <TableCell component=\"th\" scope=\"row\">\n          //           {row.id}\n          //         </TableCell>\n          //         <TableCell align=\"right\">Bad Image</TableCell>\n          //       </TableRow>\n          //     );\n          //   });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableRow","Paper","CheckCircleIcon","Error","PageTwo","data","minWidth","maxWidth","margin","map","row","processImage","src","Promise","resolve","reject","img","Image","onload","url","then","imgObj","border","id","name","width","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\n\nconst PageTwo = ({ data = [] }) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>\n          {data.map((row) => {\n            const processImage = (src) => {\n              return new Promise((resolve, reject) => {\n                const img = new Image();\n                img.onload = () => resolve(img);\n                // img.onerror = reject;\n                //  {\n                //     row.imgWidth = this.width;\n                //     row.imgHeight = this.height;\n                // };\n                img.src = src;\n              });\n            };\n\n            return processImage(row.url).then((imgObj) => {\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell>\n                    <CheckCircleIcon color=\"success\" fontSize=\"large\" />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.name}</TableCell>\n                  <TableCell align=\"right\">\n                    {imgObj.width} x {imgObj.height}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <img\n                      src={row.url}\n                      alt={row.name}\n                      width=\"200px\"\n                      // loading=\"lazy\"\n                    />\n                  </TableCell>\n                </TableRow>\n              );\n            });\n            //   .catch(() => {\n            //     return (\n            //       <TableRow\n            //         key={row.id}\n            //         sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            //       >\n            //         <TableCell>\n            //           <Error color=\"disabled\" fontSize=\"large\" />\n            //         </TableCell>\n            //         <TableCell component=\"th\" scope=\"row\">\n            //           {row.id}\n            //         </TableCell>\n            //         <TableCell align=\"right\">Bad Image</TableCell>\n            //       </TableRow>\n            //     );\n            //   });\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}