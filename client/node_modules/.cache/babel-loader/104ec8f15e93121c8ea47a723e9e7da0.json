{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\nimport SuccessRow from '../components/SuccessRow';\nimport ErrorRow from '../components/ErrorRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  const processImage = src => {\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n      request.open('GET', src);\n      request.responseType = 'blob';\n\n      request.onload = function () {\n        if (request.status === 200) {\n          console.log('success');\n          const img = new Image();\n          img.onload = resolve({\n            width: img.naturalWidth,\n            height: img.naturalHeight\n          });\n          img.src = src;\n        } else {\n          console.log('fail');\n          reject();\n        }\n      };\n\n      request.send();\n    });\n  };\n\n  const createRow = row => {\n    (async function () {\n      try {\n        const newImg = await processImage(row.url);\n        console.log('newImg', newImg, newImg.width);\n        return /*#__PURE__*/_jsxDEV(SuccessRow, {\n          row: row,\n          width: newImg.width,\n          height: newImg.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      } catch (e) {\n        // if (!newImg.width || !newImg.height) {\n        return /*#__PURE__*/_jsxDEV(ErrorRow, {\n          row: row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      }\n    })();\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => createRow(row))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableContainer","Paper","SuccessRow","ErrorRow","PageTwo","data","processImage","src","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onload","status","console","log","img","Image","width","naturalWidth","height","naturalHeight","send","createRow","row","newImg","url","e","minWidth","maxWidth","margin","map"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG;AAAT,CAAD,KAAmB;AACjC,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBN,GAApB;AACAI,MAAAA,OAAO,CAACG,YAAR,GAAuB,MAAvB;;AAEAH,MAAAA,OAAO,CAACI,MAAR,GAAiB,YAAY;AAC3B,YAAIJ,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,gBAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,UAAAA,GAAG,CAACJ,MAAJ,GAAaN,OAAO,CAAC;AACnBY,YAAAA,KAAK,EAAEF,GAAG,CAACG,YADQ;AAEnBC,YAAAA,MAAM,EAAEJ,GAAG,CAACK;AAFO,WAAD,CAApB;AAIAL,UAAAA,GAAG,CAACZ,GAAJ,GAAUA,GAAV;AACD,SARD,MAQO;AACLU,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAR,UAAAA,MAAM;AACP;AACF,OAbD;;AAeAC,MAAAA,OAAO,CAACc,IAAR;AACD,KArBM,CAAP;AAsBD,GAvBD;;AAyBA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzB,KAAC,kBAAkB;AACjB,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMtB,YAAY,CAACqB,GAAG,CAACE,GAAL,CAAjC;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBU,MAAtB,EAA8BA,MAAM,CAACP,KAArC;AACA,4BACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAEM,GAAjB;AAAsB,UAAA,KAAK,EAAEC,MAAM,CAACP,KAApC;AAA2C,UAAA,MAAM,EAAEO,MAAM,CAACL;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAND,CAME,OAAOO,CAAP,EAAU;AACV;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,GAAG,EAAEH;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAXD;AAYD,GAbD;;AAeA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAE1B,KAA3B;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,EAAE,EAAE;AAAE8B,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,QAAQ,EAAE,GAA3B;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADN;AAEE,oBAAW,cAFb;AAAA,6BAIE,QAAC,SAAD;AAAA,kBAAY5B,IAAI,CAAC6B,GAAL,CAAUP,GAAD,IAASD,SAAS,CAACC,GAAD,CAA3B;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;KAAMvB,O;AAqDN,eAAeA,OAAf","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport Paper from '@mui/material/Paper';\nimport SuccessRow from '../components/SuccessRow';\nimport ErrorRow from '../components/ErrorRow';\n\nconst PageTwo = ({ data = [] }) => {\n  const processImage = (src) => {\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n      request.open('GET', src);\n      request.responseType = 'blob';\n\n      request.onload = function () {\n        if (request.status === 200) {\n          console.log('success');\n          const img = new Image();\n          img.onload = resolve({\n            width: img.naturalWidth,\n            height: img.naturalHeight,\n          });\n          img.src = src;\n        } else {\n          console.log('fail');\n          reject();\n        }\n      };\n\n      request.send();\n    });\n  };\n\n  const createRow = (row) => {\n    (async function () {\n      try {\n        const newImg = await processImage(row.url);\n        console.log('newImg', newImg, newImg.width);\n        return (\n          <SuccessRow row={row} width={newImg.width} height={newImg.height} />\n        );\n      } catch (e) {\n        // if (!newImg.width || !newImg.height) {\n        return <ErrorRow row={row} />;\n      }\n    })();\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>{data.map((row) => createRow(row))}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}