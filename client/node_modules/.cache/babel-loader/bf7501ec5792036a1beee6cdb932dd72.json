{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => {\n          const img = new Image();\n\n          img.onload = function () {\n            row.imgWidth = this.width;\n            row.imgHeight = this.height;\n          };\n\n          img.src = row.url;\n\n          const imgError = () => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Error, {\n                  color: \"disabled\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Bad Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this);\n          };\n\n          let imageEl;\n\n          const getImg = row => {\n            imageEl = /*#__PURE__*/_jsxDEV(\"img\", {\n              src: row.url,\n              alt: row.name,\n              width: \"200px\",\n              onerror: \"imgError(this)\" // loading=\"lazy\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this);\n          };\n\n          getImg(row);\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"success\",\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [row.imgWidth, \" x \", row.imgHeight]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: imageEl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableRow","Paper","CheckCircleIcon","Error","PageTwo","data","minWidth","maxWidth","margin","map","row","img","Image","onload","imgWidth","width","imgHeight","height","src","url","imgError","border","id","imageEl","getImg","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\n\nconst PageTwo = ({ data = [] }) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>\n          {data.map((row) => {\n            const img = new Image();\n            img.onload = function () {\n              row.imgWidth = this.width;\n              row.imgHeight = this.height;\n            };\n            img.src = row.url;\n\n            const imgError = () => {\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell>\n                    <Error color=\"disabled\" fontSize=\"large\" />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"right\">Bad Image</TableCell>\n                </TableRow>\n              );\n            };\n\n            let imageEl;\n\n            const getImg = (row) => {\n              imageEl = (\n                <img\n                  src={row.url}\n                  alt={row.name}\n                  width=\"200px\"\n                  onerror=\"imgError(this)\"\n                  // loading=\"lazy\"\n                />\n              );\n            };\n\n            getImg(row);\n\n            return (\n              <TableRow\n                key={row.id}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell>\n                  <CheckCircleIcon color=\"success\" fontSize=\"large\" />\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">\n                  {row.imgWidth} x {row.imgHeight}\n                </TableCell>\n                <TableCell align=\"right\">{imageEl}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}