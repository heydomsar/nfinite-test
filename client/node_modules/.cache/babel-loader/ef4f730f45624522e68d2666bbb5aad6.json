{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  const processImage = src => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n\n      img.onload = () => {\n        if (img.width !== 0) {\n          console.log('404');\n          resolve({});\n        }\n\n        resolve({\n          width: img.width,\n          height: img.height\n        });\n      }; //   img.onerror = reject;\n      //  {\n      //     row.imgWidth = this.width;\n      //     row.imgHeight = this.height;\n      // };\n\n\n      img.src = src;\n    });\n  };\n\n  const createRow = async row => {\n    const newImg = await processImage(row.url); // newImg\n    //   .then((imgObj) => {\n    //     console.log('imgObj', imgObj);\n    //     return { width: imgObj.width, height: imgObj.height };\n    //   })\n    //   .catch(() => {});\n\n    console.log('newImg', newImg, newImg.width); // if (!newImg.width || !newImg.height) {\n    //   return (\n    //     <TableRow\n    //       key={row.id}\n    //       sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n    //     >\n    //       <TableCell>\n    //         <Error color=\"disabled\" fontSize=\"large\" />\n    //       </TableCell>\n    //       <TableCell component=\"th\" scope=\"row\">\n    //         {row.id}\n    //       </TableCell>\n    //       <TableCell align=\"right\">Bad Image</TableCell>\n    //     </TableRow>\n    //   );\n    // }\n\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        '&:last-child td, &:last-child th': {\n          border: 0\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          color: \"success\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: row.url,\n          alt: row.name,\n          width: \"200px\" // loading=\"lazy\"\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, row.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => createRow(row))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableRow","Paper","CheckCircleIcon","Error","PageTwo","data","processImage","src","Promise","resolve","reject","img","Image","onload","width","console","log","height","createRow","row","newImg","url","border","id","name","minWidth","maxWidth","margin","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\n\nconst PageTwo = ({ data = [] }) => {\n  const processImage = (src) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => {\n        if (img.width !== 0) {\n          console.log('404');\n          resolve({});\n        }\n        resolve({ width: img.width, height: img.height });\n      };\n      //   img.onerror = reject;\n      //  {\n      //     row.imgWidth = this.width;\n      //     row.imgHeight = this.height;\n      // };\n      img.src = src;\n    });\n  };\n\n  const createRow = async (row) => {\n    const newImg = await processImage(row.url);\n\n    // newImg\n    //   .then((imgObj) => {\n    //     console.log('imgObj', imgObj);\n    //     return { width: imgObj.width, height: imgObj.height };\n    //   })\n    //   .catch(() => {});\n\n    console.log('newImg', newImg, newImg.width);\n\n    // if (!newImg.width || !newImg.height) {\n    //   return (\n    //     <TableRow\n    //       key={row.id}\n    //       sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n    //     >\n    //       <TableCell>\n    //         <Error color=\"disabled\" fontSize=\"large\" />\n    //       </TableCell>\n    //       <TableCell component=\"th\" scope=\"row\">\n    //         {row.id}\n    //       </TableCell>\n    //       <TableCell align=\"right\">Bad Image</TableCell>\n    //     </TableRow>\n    //   );\n    // }\n\n    return (\n      <TableRow\n        key={row.id}\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n      >\n        <TableCell>\n          <CheckCircleIcon color=\"success\" fontSize=\"large\" />\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        <TableCell align=\"right\">{row.name}</TableCell>\n        <TableCell align=\"right\">\n          {/* {newImg.width} x {newImg.height} */}\n        </TableCell>\n        <TableCell align=\"right\">\n          <img\n            src={row.url}\n            alt={row.name}\n            width=\"200px\"\n            // loading=\"lazy\"\n          />\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>{data.map((row) => createRow(row))}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}