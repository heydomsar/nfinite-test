{"ast":null,"code":"var _jsxFileName = \"/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageTwo = ({\n  data = []\n}) => {\n  const processImage = src => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n\n      img.onload = () => resolve(img);\n\n      img.onerror = reject; //  {\n      //     row.imgWidth = this.width;\n      //     row.imgHeight = this.height;\n      // };\n\n      img.src = src;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650,\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map(row => {\n          const newImg = processImage(row.url).then(imgObj => {\n            console.log('newImg', imgObj);\n            return imgObj;\n          }).catch(() => {});\n          console.log('newImg', newImg);\n\n          if (!newImg.width || !newImg.height) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Error, {\n                  color: \"disabled\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Bad Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"success\",\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [newImg.width, \" x \", newImg.height]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: row.url,\n                alt: row.name,\n                width: \"200px\" // loading=\"lazy\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageTwo;\nexport default PageTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTwo\");","map":{"version":3,"sources":["/Users/domsardina/Development/nfinite-test/client/src/pages/PageTwo.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableRow","Paper","CheckCircleIcon","Error","PageTwo","data","processImage","src","Promise","resolve","reject","img","Image","onload","onerror","minWidth","maxWidth","margin","map","row","newImg","url","then","imgObj","console","log","catch","width","height","border","id","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport Error from '@mui/icons-material/Error';\n\nconst PageTwo = ({ data = [] }) => {\n  const processImage = (src) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = reject;\n      //  {\n      //     row.imgWidth = this.width;\n      //     row.imgHeight = this.height;\n      // };\n      img.src = src;\n    });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, maxWidth: 800, margin: '0 auto' }}\n        aria-label=\"simple table\"\n      >\n        <TableBody>\n          {data.map((row) => {\n            const newImg = processImage(row.url)\n              .then((imgObj) => {\n                console.log('newImg', imgObj);\n                return imgObj;\n              })\n              .catch(() => {});\n\n            console.log('newImg', newImg);\n\n            if (!newImg.width || !newImg.height) {\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell>\n                    <Error color=\"disabled\" fontSize=\"large\" />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell align=\"right\">Bad Image</TableCell>\n                </TableRow>\n              );\n            }\n\n            return (\n              <TableRow\n                key={row.id}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell>\n                  <CheckCircleIcon color=\"success\" fontSize=\"large\" />\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">\n                  {newImg.width} x {newImg.height}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <img\n                    src={row.url}\n                    alt={row.name}\n                    width=\"200px\"\n                    // loading=\"lazy\"\n                  />\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PageTwo;\n"]},"metadata":{},"sourceType":"module"}